package main

import (
	//"encoding/base64"
	"bytes"
	"fmt"
	"io"
	"log"
	"mime/multipart"
	"os"
	"time"

	//"log"
	"net/http"
	//"os"
)

// func main() {
// 	req, err := http.NewRequest("POST", "http://muxithief.muxixyz.com/api/v1/login", nil)
// 	if err != nil {
// 		fmt.Println("ERROR OCCUR:", err.Error())
// 		return
// 	}
// 	req.Header.Add("code", "nihao")
// 	client := &http.Client{}
// 	res, err := client.Do(req)
// 	defer res.Body.Close()
// 	body, err := io.ReadAll(res.Body)
// 	fmt.Println(string(body))
// 	//eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzE3NjAxODYsInN1YiI6Im5paGFvIn0.s9-wIoVKGjDCqLbwg1LfdIhsTwWd-R8yxUO9OUuMYXg
// 	//s := res.Header.Get("token")
// 	//fmt.Println(s)
// }
// func main() {
// 	req, err := http.NewRequest("GET", "http://muxithief.muxixyz.com/api/v1/getStrategy", nil)
// 	if err != nil {
// 		fmt.Println("ERROR OCCUR:", err.Error())
// 		return
// 	}
// 	req.Header.Add("Authorization","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzE3NjAxODYsInN1YiI6Im5paGFvIn0.s9-wIoVKGjDCqLbwg1LfdIhsTwWd-R8yxUO9OUuMYXg")
// 	client := &http.Client{}
// 	res, err := client.Do(req)
// 	defer res.Body.Close()
// 	fmt.Println(res)
// 	body, err := io.ReadAll(res.Body)
// 	fmt.Println(string(body))
// 	//{"data":"","msg":"似乎是某人的十年前的日记:\n\t2014年11月1日:木犀成立了有几个月了,我们克服了很多困难,虽然日子还是很艰难,但是会好的。\n\t2014年11月5日:今天XXHBGS突然想要把我们干掉,还抢走了我们宝贵的文献,我们几个月的成果全毁了。\n\t2014年11月10日：经过全体后端组连续5天不眠不修的努力我们终于找到了夺回我们文献的办法，我们知道了怎么攻击XXHBGS的内部网站\n\t2014年11月11日：我们对：http://muxithief.muxixyz.com/api/v1/attack 网站发起了全面进攻，在进攻的过程中我们发现原来我们的文献藏在：http://muxithief.muxixyz.com/api/v1/paper 。\n\t2014年11月16日：经过不断的攻击和探索最终我们发现只要我们在向：http://muxithief.muxixyz.com/api/v1/attack 进行疯狂的攻击的同时，尝试去访问：http://muxithief.muxixyz.com/api/v1/paper 就能够成 功找回我们被抢走的文献。\n\t\t\t\t   具体攻击方法如下:访问：http://muxithief.muxixyz.com/api/v1/eyes 获取工具用的图片,通过短时间内并发请求发送攻击图片的方式来扰乱系统。PS:(3s内达到5次以上访问,别攻击太狠把服务器打挂了)\n\t...\n"}
// }
// func main() {
// 	req, err := http.NewRequest("GET", "http://muxithief.muxixyz.com/api/v1/eyes", nil)
// 	if err != nil {
// 		fmt.Println("ERROR OCCUR:", err.Error())
// 		return
// 	}
// 	req.Header.Add("Authorization","eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzE3NjAxODYsInN1YiI6Im5paGFvIn0.s9-wIoVKGjDCqLbwg1LfdIhsTwWd-R8yxUO9OUuMYXg")
// 	client := &http.Client{}
// 	res, err := client.Do(req)
// 	defer res.Body.Close()
// 	fmt.Println(res)
// 	body, err := io.ReadAll(res.Body)
// 	fmt.Println(string(body))
// 	s :="/9j/4AAQSkZJRgABAQEAkACQAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsNDhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAETARMDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwBtjZYI4ro7G0zjiksrDOOK37KxwBxTAW1tcAYFa9rbYxRb223HFXYwEFOwrlq3gCrmi4u0tUJJqjf6vBpts01zOkES9XkYAV5l4y8VaxrFvJDo8TWNswIbULlSpx6op5/E/p1qkiGYXxv+OFv4UtprS2kWfU2XAjByIuOrf4V8MeL/ABHceINSmlnlaWSRizuxySa7H4q61b/2jNbWcrXCqxD3Uhy8zZ5bPpnp+ZzXl+NznOaocY9RIYRVtEGOlMQAVYRaDosCqB7U8DNPWMn6U5Y+aCrCxrxUyLSKmKmRc1V2MFHFSheOlCrUiildgIEp232p4FOC5pXYJDAmacFp2OaXIzinYvlGgVNFbtK4UfjTV64xk9hV1CLaLA5duppFKNiGaNIVKryfWqciqCNrFuBnK4wfTrViRt1RMlUlqRIgZaYwqZxiojQyLELLUTDirDLUbCncLFdhmoyozmp2FRsuagR0ngbxLceHtYtru2laGaFw6Op6EV+mXwL+I1r478LWd/EVSYjy54gf9XIOo+nII9iK/KiJzDIGHavpD9lD4pt4V8aW9hcTbbDUisD5PCyfwN+Zx/wL2qJaalpc65T9JMb1zVK5hz2qXSbkXNsjdeKtSw5ovc4XoYRthnpRWobbnpRQK54TZWOMcVuWtpgDinWlpjtWrb2+McUkbEKWRZeMj3FQyeHZ7hs/briNe6oEH67c1vwQ9scVoQWy45q7EHG/8IlY2Z+0NB5s6/dmuGMrj6MxJH0FfP8A+0l48j8N6M1jbyBbu7BXg8on8R/Hp+fpX014ovLaytJDPcR2kKozPNJkqoAJycAmvzc/ae8SQ3PxC1FLTWbbW7QqhhuLM5jClQQnU8jPOD1z0OQKSsZt8zseR6zqJvbt2zxniqUQzUAbc3PWrUHShnVHQ09Oi3RzJ5CSmVQgZgSyHcDleevGOc8E1qf2FLFFFI6YVyQuevFZ2nXhtXVwcFTkV1Ntqw1S4hBAVUUIqis3dHVBRfqXvDnw4vfEMMjwIAEHVuAT6Vi634em0e4eGaMpIhwVPavq3wDo1ppegQQnaJNm5z6seteZfFLQZdfvri8sLbzLaFSplBADbc5I9fTj0rGFTmep11sOoRTR4Rt5p44NWbq28pzVccmuk88kQVKopqLUgWhgOVadjFCjFOxntQio2G1cv9Vl1G3s4ZEiRbWPy1Ma4JHv61UxzimuGOEX7zHAqjUktAC7Sn7q8L7mnu5YnPelZVQKi/dUYFN70DGetBNOxUb8UGbK1zKIwSTVBr0jsDTriQzSHH3RwPeoYbcz3UMX95wPwqTM0ByKay4qdwAx9KiYZq0rAQsKiIqdhUbj2oa6kldxWpoF+1ndowYoQcgg9KzXGKjWfy3yKlgnZ3P1q+APj1fHPgDR9TZw08kISf8A66r8r/mRn8a9YXDrX5hfs1/tB3Hwu1P7HeB7rQbpw0sSH54n6eYnrx1HfFfoj4N8daX4v0qK/wBKvob62cffibOD6MOqn2ODWa00ZFSN3zI6zyvaiq41ACig57Hm9pZdDitKG16cVbgs8DpVuK3AOKaLZBbWe8t8yrtUt8x6+w96mI8uMn0q2IMVU1M+VbOfaqaIbPnH9rfxx/wjngO4gik2z6g32ZcHnaRlz+Qx/wACr84tVuzeXrtnIzxX0/8Atr+MmvfF8GmK+Y7G3yVz0kc5P/joSvlJTls9zVWCkr6mmmrz/wBhnSfKtfs32n7V5v2aP7Ru27dvm437Mc7M7c84zTIelV0FTI2KR0IsoTmrtleNbyqynBBzVBW496kj65o9TRM9L034s6zaRhVvpMAY5wf5irb/ABSv5tIksGMbRupTeR8wB6815ijEEVOJSAKz5I9jf2s+50etanaX9nD5ca208EYTAX/XEnk5HfHr6H2rHiTmqaOZJSc8Lx+NXImqjJu5ZVKdjitOx8S3NnaLbC3sZo1HBmsonYf8CK5/Ws+4uDcztIyojN/DGgRR9AOKYO3QGIZiVXYuBwTntzTugpiDNSBdxq7WGhNucmi3X5nlPRfkX69619O8OXep2V5dxoUtLWMySzsOM9lHqxOB+NUHhECRwg52Dk+p7moUk3ZGri4pNkJGTShDTxjNB61djPmG44pv2Ka+lS2gjeWaU4CICWP0FSwJ51wEHQDJr6s+A/wXh0+wj1fULfddXChtsg5A7L7D19T7VyVq3sl5nZhcM8RLXRI8X8Gfs/61qjR3FzbxQ2/G6OVS2R6EgjH4En2rn/H/AIR0/wAL+IDFZReX5UBZ/nZhuYkDGTxwDX3hrNvHpOkzShVURoSBj8q+F/ilqf8AaHifU5QAoacqFXoAny4H4hq5KEp1Kl5M7MXClSpJQX+ZwLjBpjCrDQloZJdyAIyqVLgMc55A6kccntketV34FesjwyvI+HA9aa5zTZSDOB6D/P8AKkLZB9qRJHIecVXdeallfbyahLCmSdf8NNQt9N8W6Rc3kEVzZx3KGeGaMOjx7sMCDweM1+lehfADw9bTre6LJf8Ah+5I/wBbpd0yA+2DkY9gMV+W+hS7btMHvX7CfBfVR4h+H3h3UTy1zp8Ejf7xjG79c1jLSRo/4d/Mii8EeIYo1QeLLpwowGktICx+p280V6OIBiiqsct2c8dMMTEY47Gkh02Wd3ESFyil2x2UdTXTw2YurAED5lrJuLYox4xWMWbSRlqnFYviWQQWMh6cV0hgIrifiPcmz0O7dfvJGzD8q6Vq0ck3ZH5WftBeIW8R/ETXbvduSS7dUPqinav6KK8yRcV0PjJ2k1JmY5JOSawEFD3NqatFEyVIKjWpAaC0P3HG3cdpOSO2e38zUqNVYtxjHOc5qWNuhpMtF1DkDgjjnmntv8p3VSwQZJHbJwP1Iquj04HzJlHYcn+lIotW6bVA/X1q1GcH2qKPAFPDAUyiyGo3bmwOvf2quZj0HXtViEYHr7+tCQFmFfSuj8JeENS8Y6tFp2lw+ZM/LSN9yJe7Mew/zzWDAoG3OeTgADJJ+lfXnwC8C3mgeH/tV3bixFwA4hZR5snHDSHt7KOncnNc2IrezVluz0cJh/atylsjzr4meH7b4eeC9M8PQTvcS3MhuLiV+N6pg8D+EbyuB7HqcmvD5n3uSe5zXrX7QOvjUPHOowq2Y7NY7RPwG9v1cj/gNeQs2TWlGNoI58RPnqNodt4pMimk5xzSSW8k8RVFJViEZh/Dn+uAfyPpXRojnSbPUf2dfAK+OfGUMlzHvsLb/SpwRwyg/In4nBx6A192W9nHGo2RrEvZFHA9hXjP7LvgsaD4ETUZI9txqj+d05EQ4Qfzb/gVe5YwleLVlzzbPqKEPZU1E4H4rammmeG5mchVwWb/AHVBY/yr8+tVvWvbh5nOXclj9Tyf1Jr7I/ae1v7D4T1GNWwfIEI+sjBT+hr4nvJsOAOpYCujBx+KR5WPleaiIw71E4p5PFRTNgGvSPJM53AnmYnhcD+v9aSIkxgkYJ5/Oq5bzIlA6zMT+B5/lVt6lEsztTlMcYwcFiBTutVNXc+bEo9zVmJt0an2piNLSW2XC/Wv1f8A2SL83/wT8LOTkrBJH/3zK6/yFfk5YkiYfWv1S/YtJb4H+HgezXP/AKUSVjPSSL/5ds+iFxgUUgXiindnITaFJtUoehp+p6dkl1HBqhpc4RhXSqBcw1klY3bucbNbMCQAT7AV558SbbztIuVxwyFf0r1q+ge2csjFCQRlTjgjBrzbx/FnTZB7VvDc56i0Px78f2BtNYnjIwUcqR9DXKAYr1D42ac1r4p1KQ7AjXk6BQ4LDDd1zkD5hgkYODjoa8vz1qi4O8UPWnZqNTTs0FiO2Bj360Rydqjlaow2D1oKRoo9WLQ7tzep/QVnrJhCfQVehHlxKPQVNiy+rUvmAAknj1qgLjnrTlk3sF7dTQMvwnPzHgnp9Kv2/OKylmy20dutdb4E8LXHi/W4bOFjFCCHnlUZKqD29z0pTmoRcpG1GnKrNQjuz3b9nb4ODVriHxFqkYMURDW8DDv2Yj+X+cfT96sen2cjsQkcalmPoAKofD3wxa+GvDlnZ2sRijVASCcknHc1lfGrVxonw18R3Iba32OSJT6M42L+rCvFi3VnzPqfT1VHD0XGHRHwx4l1p9c1e+vnJLXU8lwc/wC0xOP1rILZollG6mqwNe9FWR8mtSxbwyTOiRoZJHYIiKMlmJwAPxr1B/h86aj4R8JQHOoX7fa7uVRn5nbYp+iKkh+hPrT/AII+CTq00uuzx5gt5Ps9qCOGlI+ZvwHH1J9K9m+F2ix698efE2qld1tokSWMHs+wIcf98y/99V59SrzTaWy/M9mlQUIw5t5a/Ja/joe+6DpMOladbWlugjt4I1ijQdlUYA/IVpSgKhJ4xSwsqoBms7xHe/ZNLuJAcErtX6niuJ2Suenzcx8nftUa551paQhsG5vGk+qIpH82WvmKVt94o7Kpb8eg/rXuH7S96ZfFmm2ecrBZ+b+LuQf/AEAVg33w3a2+Cdv4haHbdtd/aS2Ofs7kRqPpkK34134eSp04p7s8HERdSpOS2R5eWqlqMhW3cA/M3yj8eKsM+C3scVl6jc4lGeRGpcj36AfzruuzzxsHz3LEfdjGwfXqf6VaPOc1DaRmKJVY5bqx9z1/WpyCVIGSfQUbLUS1djA1Qk3S8HG3g1cgHyL7Cui+JvhlvDFxoNk67ZzYiWb/AK6M7E/lwPwrnV+UY9KiElNcyKnFwk4voaGnjMoNfq7+xxaG2+CHhjIwWjmf855DX5S6QN0q57mv2E/Zz0c6N8J/CdsRtZdNgZh6FkDH9WNRP4kV/wAu38j1cDiinDpRVWOQxLZ9hFdBp2obQATxXNqMVYin296zZZ0l9suIsjrXmvjq132Mo9q7D7awTGawfECC6tpAeciqi9SJrQ/KD9pTRTp/jfVflxmZn/Bvm/rXg5kw7CvtL9sPwc0OqR6gsfyTIY2P+0v/ANY/pXxVfxtbXLZHGa2e4qW1idGp+6qsMgbGDU4NI1IpmwaanNMu2xj3NSWyl8UDsWEUttA7kVdcMsRNaPhjw7deItYs9OsovOurh9qL2+p9ABya+g7L9k3z7RftGvbJiMkRWuVB+pbn9KxnWhB2kzrpYarVXNFHzJuI69KnEnkR5I+Y9vevcvEf7Kut6YjS2N9b6jGvO10MTH2/iH614zrWh3ukapJa31tJazxHmOQYP19x7ilCpGezJqUp0vjQy0+XjOWPJNfR37MPhuTUr8mZ5Y4C27ysqFcDqSB8x+px7Zrx34d+ALzxpfhIR5VsrASTkZx7AdzX3b8IvhlpngDRo47S0WK5lUGaZuZHPuf6dK48VNSXs0e3l1GVP99L5Ho1ugSFQOMCvDv2t9XksPhibeOMub28iiJ3ADjMnPf+CvdQoCV80/tm33l6D4etM/6y7km/75jx/wCz1nQj76RWNlai/wCup8e3V7qO8iO1iP8AvTH/AOJqK3fxFe3MNvaadDLPK2xEWXkn8cVos67u1erfs9+GF1vxZ9slj3Q2owM/3up/TA/4FXoYip7Km5Hj4Sj7eqoN6dfQv6J4q+LngrStI0mDwBpwhtjviUTb2lIwSW2y9fy61L8MfjT8S/CthqN/ZfDyTV4tYvpdQe5iimOSx5Ubc/KDnH1r6J1eOOO9S4IGLe0mkz+X/wBen+Bk0Xwx4U0XTbjVLCB7WziifzLlF+YKNx5PrmvD9u7bI92dF3vzPbyPMoP2xvGNkMaj8J9SQjqUkmj/APQoDWZ4i/bcjuYUgvPBGqWJDbmBmDH9UWvoceIPDGzP9tWDj1SdWH5g1xs1zY654guLmzkjuYYDsQxsCDj/ACaTrx2aJhRqatS28j5A17x1L8dvipBBomnXVs2oyQWUAucHyRtClmwT0O5vpX2f478BRp8NbnQIR5iJpRtImKgEskeFOBxnIBryb9mjwqvir4ra54snQfZrOaZ4SehmmZtuPXEZb/vpa+nPEsIMKL35ruqPVW6HHSh+6ae8j8uLh/nc9jg/pWMh+2XbH+HduP0HC/rk10nj+yOheIdZsR8pt7uW3X/gLsB+gzXP2MflwA9C3P4dq9danhFzI45r034DeAX8c+M4pJI99hp+J5jjgt/Av5jP/AfevKp7a7uwkNmwWZ2Cr8u4kngAD1zXv/w6/ZwttOto5/EV3PqtzIA72fmFLdWx0Kg/OR0549q4sVWjTjyvqergcPOpPnS0Rzf7ViWi/EGwS0mjlCWaqwjcNtO48HHevHQK9R/aD0a20fxfYQWlvFa26WYCxQoEUfMegHFeWrya1oO9NNHFXXLVkvM6jwPok3iDxBpmm243TXlzHboP9pmAH86/afwnZR6fpkFvCu2KFFjQegAwK/Kv9jrSINY+OfhpJ1DpC8twq/7SQuy/kQD+Ffq9pmI7dQPSresjOelNLua+6iqvmH1oqzkKdzD5S56Vhy6xHBdeUWAbGa6+7hWW3b1xXgvxW1k+GJxe+Y2VO0xgcMO5z2rlvbU6Vroeptq0apksMVkaj4mtIlbfIOnTNfMHiv8AaZs9Hs2EMxuJscRg4x9TXz740/al16/lcQ3v2ROywDB/M81tCz1Mpp7H0r+0LZ2fi/wtf26bTcKPMhb0cdPz5H41+bniFA1zJheATnjpXVeJ/ibqXiHf9rvp7kntLKzfzrhZ7lpnYknB6jNakRTiVo4drZFW1OBUSkU4NQaFe+4Cn3q7aJ0qncr5m0erCtKzUbhSZpE+h/2YdBgiudU1+5UbbZBBGx7E8v8AjjaPxr2TUPF9+Zz5UjWqfwqoHT39a4T4J6ett8LbM4wb27kkb3AO3/2QV1uqWQ8nzFUYHBx2r5rETbqM+4wdOMaUU0bWjfEOSFxFqSLNCePORcMv1Hf8PyNXfFnwv8N/EfTA80McysCY54+qn1BHI+n515tcsY+MmtLwp4yuPDV6CCZLRz+9gzwfcehrGFVxd2ddXDRqR0Rx3w0tLn4O/E+4s9QiL6JJd/YTcSYOxiA0Tn04I5/3vavs2yuS9rDH8pRM7cKAefU4yfxrwv4oaDaeK/B97qFltkM9vuWRR1deUJ9wwx+lehfCXWpde8DaReTEtK8Cbie/yiu5y5pX7nl04+zhyPod8xAjr5H/AG3r5oJ/CsaI0h8u7cqMesI7kV9ZO5CV8fftr3G7XvDaZ6Ws/H1dB/SurDr3zzMe/wB0l5nyVqfiJo98MttsyDkSnqPy/rXQ/Dyz+IUkX2nwp/bwszIQRp8cskO7jIIwVPbg+1W9L8OR+J9WstOZA32mZI845AJGSPoM17t4Y8E+If2dNWttbgil1TwfdbftqxLmSGI9GZfVc53DjqDtB51rzs+V6nNhqXMufZbHn7+CfjLr4zLaeIJiRj5rUJx+QrJ8TaB8UfAxs21m88QaX9qYrb+YznzCMZAG8+o/Ov0q8AQ2PiTTra/sZ47q0uEEkU0Ryrqe4rgv2qvhu+r3Xw5ZFzE2qtbPx0LhCP8A0A104DDQxdaNOeiZz47EzwkHOMnp6nw3o/xG+I2lOUub/WXtxxvGkxT8ep6NWlffHXVNH0O5huJ7HVZnQiOWSw+z3MDnoSsgKsPUBD/vCvuLwd+ztN9utZLNkjvY3EkTsqttYcg4YEHnsQRXlPxy+Ay3GueF9GkhWWfVtditpYwAMqSRJwOAOe1fVYzh7LYQlKhP3oq9rLX7rHzmD4nq4irCg72m7X1OM/Y08S6jps1xYJokeqLLALmS6027iZ1BIADo7gBhkDgrwMEMQCPqnXJ/PVWAZcrnDjBH1FcPpf7N+kaJ49S4gS60l1tJFttQ0y4aCZfLePCSY4kOHIJcNuCLnkEtseL9Sj8IaLqOoajqM91b2kTSyTXAjDbVGf4FUZP0r4DWS0PupVIJK3RHwT+0JYrF8YNft0I8rzlmOPV40Y/qT+dcOkfNaviLXbjxX4h1LWrv/j4v5mmK/wB1SflUewGB+FbXw58A3vxE8UWmj2IKhzvuJ8ZEMQ+85/kB3JAr2k+SN2fPQi5uy6nT/BLwetzqP/CQ3seba1cpaow4kl7t9F/mfavovTNbtZY+LiJiBztYH+VeL/G7xfp/wmt7PR7OCIOoMVtbyhjGka8b3A5Yk/mSTXif/CxPE/iyR4bHXdWubhY3uDBpz/ZVVVGTgKMkAdia8GVOpiJuo9EfTrEUcLTVGOr6npX7S8qP4rsZAQc2zDI9j/8AXrxkNzVe81nxD4iFte6lfXl1b5kihnum3sSNu4ZIycZWuo8BeFZPF3ifSNHQEvfXUcBI7BmAJ/AZP4V7FFclNJ9D52q/aVHJdT1r9jbUBp/xt8MyMdokaeP/AL6hkA/Uiv1V0ufzIVI9K/L7TtGHwL/aDsZPssTafaajHcwJcKWjNs7fUZ2gsM+q1+lWhX++BATyKvaTRhKXPTi0dP5jUVTE+R1oq7I5y5Lf+VE2W4xXy9+034yttP0a5UsvmuCqivcvFutLp2nSOWxgGvzq/aW+I76vrk1usw2KfLXc2BnucmubkdjbmVzwzxf4je5uZsTAYPQnk89q4i6uWlYkmlvbo3ErMTkk9aoT3AUHnpWsVYHqyUyc0b/esibUsNhOfepbTUBKdrcN/OtLiNVTTwcVXjfPepQ3FMBScyL+Jq9aP861mq+ZD9KtWsnzA0WuXE+xPhFOsvwp8PleQkkqN7He9dxA25SrYYH1HBrxD9m/xjBPb3fha6kCPKxubRm/vY+Zf0B/76r2YebFIyFirKcEYHWvna8OSbufbYaop000NufDdpdNkB4/9w8frUF54atY9OlSOP8AeY3B25bIqx/bH2SQJdKEQ/dlX7p+vpUyyz65ciysEMjN95x0Ueuew965GkdqlI0fh7aS3fhDVrTAYFmEe/oGKD+uK774b6aukeHLe0QYji/dr9FAH9Ki8PaDHoemLbRncxyztj7zHrW9o9v9ks4o+hAyfrXXTg1a5w1ZqUpW6mpJ9yvjP9tKQt4w0FccLZk/TMn/ANavseR8oea+SP2trJr3xnpm0ZK6RcS/98FmNehR0lc8XGpygl5nlfwS04ah4+siRkW6STfptH6sK/Qqw0aGXToreSMNGEC7SPbFfDP7M9h9p8Z3EhGdsKx/99SL/wDE19/WSjArOp71aXyN6KUcNDzuyL4d+D7fwPdfZdLtUt9LmkMnlRbsRyHk4QDCqepIIGe3JNdx8UfDx1zwUtzFH5t1pF1DqcKY6mM/N/46WrM09tgIPKtwQDXZ6ZqarEEwGTG0oehHpXdgqv1arGfZni5jT+sU3E1PDunW9kun6pb7rmJ1En7sA5RkOCB+Irz/AFLw1Dr3xo0yWdA40WGfUXB5CyzNtjU+4G4/hVvQfFeoeCZLrRl0ye/09C0lhK7rF5YJyI2ZyFIBPVSTjt2Gh4bt20m1vr68niudV1KXz7qWI5UYGFjX/ZUfzNfSVcQqUZy5k+ZWXz/Ky/E+PwmBtVhaNlG7+drDfEzRWcE7qACcn8a+B/2yPiINlt4Rs5fnuCLm+2HpGD8iH/eYZ/4CPWvrD42/Euw8FeGr/U72XEVuhYqDy7dFQe5JA/Gvy+8VeI7zxd4gv9Yv333d5KZX54X0UewGAPYV8zCPNLm7H1spNR5O5nWNjPqV9Da2sTz3EziOOKMZZmJwAB6196/Af4PQfDTwmEmVJNavQJL2Yc4PaNT/AHVz+JJPevPv2Y/gcdCt4vFWuW5XUZ0zZW0i8wIR98jszD8h7k4+kzILWHdjgCpqT59tjvpU/ZRv1Z8efG74Y6f4qn+InjbU7+5tpNFmi07S4rd1UGVUjJ3Egnl5ei4781458LPBU13Ya5fRYjn1J7fw5YMf4priRfMx9I1P/fVe3/HTSWXxZNounveXN5rF7/aMNiZWMJdkCNJt+6uNrZPYfWuQ8Baxp1z8bPh34P0edLrSNEvxPLcx/du7vl5JR6qCu1fYE9DXY4xVJWPMg5e0bl6f5mN+098KPDfwv8c6ZpPhy1e0T+z0muP3zv5shZl3EMSASEycYHNdx+xL8Pz4h+I02ryRb7fSLYupxx50mUX/AMd8w/gK5j9qfWl8QfG/Xdrbo7MRWin/AHUBYf8AfTNX2N+xp8N18IfCy2vLkCG+1Ym+kDLztIAjX/vnDf8AAjUyVrIijJyg5v8Aq5kftKfBlvFXhVdXsIDJq2lhnCoPmlh6unuR94fQjvXpfwJ8XDxd8O9D1AvvuPIWG45581PlbP1Iz+Ir0S4tQwIxXnPgvwS3w58a6nBZpjw7rTm5hiUfLaXQ++gHZXXkdgUx3Gaa2ZlCVrxezPWt6AD94G9wDRVQEgAUUC0PO/itcxnSNQEt/FYiK3Zw0vcgV+VPxP1p9R1aYs2SWJr9Av2qfE0kWh3IdhuZREMADgfT6V+a/iy88/UZTnuaOhMdzBmm25rHvbwudoPFWb6fapHesh2yTSZs2Lv5pQ5BBHBHcVHTgcikSbVhfeaoVjhx+taStkVy0blWBBwRWvbXu9ck8DqPSqKReV8O5q1FkKKz1fcSfUirsbcUyrmxoWt3Oi6raXlrKYbmCQSRuvYivsnwx4pt/HPh611y0ISRx5d1EvJilHUfQ/yIr4f8wrOhHHBr0T4NfFVvAPi1VuS0mj3aiK7i6gDJw4HqM/iM1xYmlzx5luepgcR7OXI9mfWM1uby3MTheejf/Wrpfhv5Vlc3tm2BKQrr/tKOD+WR+dcpqkk9ukV1ZustjMAySr8wIPI5+nSptC1OZNZsLhgAVlWM7e4Y7T/OvE+GSPqr80dD22FhirKSdhWXbzbgPWriNXdsec2Xd+VxXgnxz0Qat8Q/DcbDK3GmajCf+/Y/+Kr3RZOK85+I+mNd+LvCNyF+VHu4GI7b4CR/6BVRdrnLVXNb1Pn/APZcjMPiLUS42vGbcEHt8zZ/lX3TZP8AKtfGPw20xvDfxS8XWWNufLuYx22sS4x9N+Pwr6/0q6E9tFIOjKD+lO/72Q1pQh8/zOnt5woFaUWoeWRhuK5yObjrUjXW0da2OOUbs6Y60VXk1y3irxfZ+HbWe5PlQyOCzEYXOP4mPoPU1k654lTS7aSQ/MyjOOw9yewr5g+N3iDUfEulX1zfXEmn+HYRmfB2zXjZ+WJR/ApOOvzHuAATWbndqK3YlSsnLojyv9oH41zfFXxAbSylY6HYuSh6efJ0MhHpjgD0574rsP2avgOdclt/FfiG2P2BGElhayjicjpIw/ug9B369OuR8APgLJ46vU8R67bC38PK++C0wR9rIPH/AGzHr/F9M19l2sCW0SJGqxxoAFVRgADoAK6ZSsuSJnRp2ftJ7liBAgximXy+dAyeo4p3m4pkhDCsbHQzwj49eDdR8U+FL1dIne01mKF0Qxna00RwXhLdgwA/IA8E18lfs9339gfHLwvJdg24hvCkgkG0odrLg56c1+ieraXFfIQww3Zh2r5q+N/7Ntx4gvH1/wAO7YNaX5nRDsW4x0Of4X9+h7+tVCTj7stjkrQu+aJwHwl8H3Px/wDjNIzq5sbu8l1K+k/uQeZuIz6nIUfX2r9QdD02Owto4o0CRooVVUYAA6AV87/sd/DnSfAHgFUW5gn8S3uJtSjHyywYyEiKnDALk84wSSRkYr6WtjhAK7Y+/wC8efNeziqa6EsgBqu8CyqVYZU1O3NLGuTVoxIA0yjGxXx/EWxn8MUVdCCiq5RHx1+1pC76S5HQNX51+JEKXku71Nfp1+09oj3egzsq52nNfm98QtN+yancBfuliR+NZRd0K1pM83vJSzmqmanuQVciq+xmDEKSq9SBwPrSZohwOaKbmlyMUJgOU1JHIY3DA4IqEGnBqYGtZXKscE45HFa0bZFcvGxVgQcGuhtJS8SE9SKZSdydh+9T6GtzwP4Xl8UeJo7ZY3a3Uhp3Q42r9e2axU+aaPPIr6M+COhrPoVstvCvn3EjMzActgkDJ9gK5sRUcI2W56eBoqrU12Wp7H8OvI0azTQJVxZ7ALZJTuA45TJ/Mfj7V2kGhafbzxyrEAyNuA3HAPY4zjisLXPDqtbJKiZKKA4HfHQj3FZD3F+0YjGpXKoOOAhb/voqT/X3ryXpufRLVe6entrkNovzOC3ZQeTW5Z3JnhRyNpYZxmvF7IiyJK7mY8s8jFmP1J5r1PRtRS9sopUOQyj8PaqhK+hnOLijoFk4rP1i0F2tu+NzQTLIvt1Un/vljUqy9Oad5mQe9b2OZnjmt6H/AGd8UdOvlXC32nTWrY7vDIGH47Sf++a9t8K3nmaRbc/dG0/hxXIeKtMSRLS925ayu1uM+iMCkn/jrsfwrY8MObNbi1c8xPkfQ0rWnclO9Nx7M7VbnA61FdX4jQsSfoBkmqSz8dapajqkFhbtNcSeXGOOhJY9gAOST2A5Nbs5jM1tGu4pbnUp0stOhUyyKXA+UDJZ26AAf/rryKLwXcfHDxHaanqVu+n+ANObdp2nsCj6i3/Pdx1CHtnkj0yc+k3eiy+M5Y21iJodIjcSR6WxH78g5Vp8dQDyI+ndsnhesRQAMCpiktVuDblbm2XQWztYrWCOKKNYoo1CoiDCqB0AA6CrBOKjVsUM1UNscWppfApjPxUTvke9MliyvmqU+MHNPkl5qlqF4lpbvK+4gdFUZZieAoHckkAAdSRRa5DfcojULVPGPhbThPFb6ld36tbsTh9kX7yXb35RCv8AwMA9a+jraUMAa/Pr47/DP4l+D/G+lfEKFGvoLLyriKK0UsdO24Yo6j7ynnLjg5OcDFfXfwW+Mmi/Fvw3BqGnTol2qD7VYMw823fuCO6+jdD9cgdcIuGjPKqSVTVdD1NTu5NOBwc1HEdwzUoQ4rZHOP8AMophWinqK5w/xB8LRa9p0ySIHVgQQa/On9pD4YJ4X1EvFkxShiMjlcHp+tfp5fMJIWB5GK+O/wBrfw39p0lbhUyY3IJHoR/+qoitCZvW5+berWvlTGss8Eius8RWZiupFI6GuYni2k0mjVEOM8Yz7U+eCS2meKWN4pUJVkcFWU+hB6UtvIIZ45GiWZUYMY3ztcDscEHB9iDRcTG4uJZSApdi20EkDPbJJP5moGMWlwc01RUijmqQEkQ3OoJAyeprobYbUArEs4PMkBPQc1uRcAVSGi1BGS6kdiK+tf2cYAdGtnI+5G/5lzXz94A8LHXU1Fimdtu6xn/b2kg/p+tfQ/7OLD/hHn9Ubb+pP9a4a7Uj28FFwu31X6nu3lrLCVIzkVjTeG0Zyy8VrwvhRUwbiublvuehz22OB1aybT59jemQfUVr+DdZ+yzm0kPyyHKE+vcVoeJNNN/ZlkXMsfzLjuO4rh1cq4KkoynIYdQfWsXHkZvGXPGzPZYp9w61MJcVy/h7WxqVmrEgSr8sijsf881upLuFdMXc456FqULPGyOAyMCpB6EGi3gEcscob5wuxif4vQ1EsnFSpLiqsZXsaQk4qEwRPOJigaQcKzclfp6fhUSz8U9ZtxqrGRYBxT/MquHpd9FgLIlpC9QbuKRnpiJDKM0xpBUe6mM9Arg7VqfD/Qv+Eg1X+2Z13afZSNHaKeksw4eT3CcqP9rcf4VNc9qCvcJDaxzG2e8uIbQTjrGJJFQsPcBsj3xXt9hpMGj6fb2VrCLe2to1iiiXoqqMAflW9KPM7nFiJ2VkS/YFuuGXNc4vwS8Eya0dWm8PQQ6mMsl3Yk20m/P3maPBbvnPWuttJNpq+JNwrt6HneYlpbJbxLGg2oowBVkAGoQfSnq+KzAk2j0opvmCinYRn6rpd3pRjS7i8tpU3qNwOR+FeL/GrwiPEWg3cG3mRCFPoe36163NqFxe7DczPMUXapc5wPSsrWrBNQtnQ+lK9hM/H/4l+GJdK1e4R4zG6uVZT2IPNeZ3tvjPqK+/f2lPgu9y1xqtpBvIH79VH/j4/r+frXxjr3hG4tLh18s9fSgIydrHnzJg9Kbtxmtq70K4jYkRn6VRfTpkzmM1LRoimoqWGMyPgVItnIf4DWpayTR2X2Tcpg8zzSNgzuxj72M4x2zihIB1tAI0AH51aiO6ZFHrURcImc9Kt6TZPJGLpv4nKL+AGf5iqbsXBXZ9CfBDSVFhEzDBm8xz+W0fyrufgon9j6vr2lNwY5VmQf7Lf5FZHwks/Js9OTHS3BP4rn+tdBFbtoHjuG/HyxSZt5/9xiCp/BiPzryr3ufR25eW3Y9ngk+UVOslZlvLwKtI+RVpEtlosDXHeKNK+zTfaoVxE5+cD+Fv/r11gPFQ3cCXMDxOMq4wamUbocZ8rOI0vUX066WZCcHh0/vD/GvQNO1SO7gV43DKa82v7aTTrqSF+oPX1HY02z1m50uUTQncv8URPDf4GsIvlZ0yipq6PXFmyOKmWTiuU0HxVa6xH+7fbIvDRtwyn3roI5wR1rpVnqcTTWjNAS8VIr4qislSrJVEFvzc09ZKp+aTT1ekQXBJ60F81XWSlcrIpVgCp6g85qgZBd65YWDbbm9t7c+ksqqf1NUz4r0diqjVbNmY4VVnQlj6AZ56VPHYWtrnybeKLP8AcQLUM2lya9e2um2RK3jypMJV626I6kyn0xjj1JA7mmo9DOUrK51PhPwfc+I7i31C/R7LTYJUnhhkUrNO6MGViDyiBgDg8tjoB972BWyoycmse1UqBxWrb/Mtd8IKK0PJnNzd2TpGM5FTpwaZFgVIRVLRmZMvNIajR8Uu/NEhjwM96KTcfSioEc0J8U/zQRzWWlxnvUwmyOtAGdr+hW+qRMGUHI5BHWvB/Ff7MOiazcyTIkloWOdsRG38iDXv15NKgJjUP7ZxXOan4iks42L2Vycf3EDfyNIVlufL2v8A7JdhBFI4vnVQCcmIHFeJ+Kfgf5EzR6V9pvApO+ea2+zwqO53Mecewr628dfFSWyhkEGmTs2Os/yAfgM5r5J+LHxH1jXZZIrqZooD/wAsIgVQ/XufxoQJnlXiHSdO0Rmt4bldSvM4eWLiCP2U9XPvwB79uXkIU8Ve1K5LFic1h6hq0966+Y7OURY1LHooGAPwFO9iiYv58gRfxr0h9BbT/Duk5XDnLN9WGa4fwZpZ1bV7aDGQ7gH6d6+hPEXh/wA/wvJKqcwOj4A7dD/OuaU7zSPRp07UnI7/AOG0ARbYAdLdcf8AfIrstW0+JrmGSVN8Mv7qQH0P/wCuuN+GcgNtp7Z5a2C/iBj+lelz263MBjboR19K5VHSx6jnsy9YoY4UTcz7RjcxyTV5Tis6yLLCok+8Bgn196tiQYrSxm2W1kqTduqmslSCQiixNzI8UaZ9stPOjGZoueOpXuK4jzBnFemM+4VwfiTSjY3TSxDELnOB/CfSsZx6nTSqW91mS0bJMs9vKYLhfuuv8iO4rrPD3jffItrfAQ3PY5+V/cH+lcd5xXI71FdLHdxbXzxyGBwVPqD61irp6G0kpaM9utrxZVBVsg1bWUdjXimh+PZ9AlS31LMlvnC3Kjt/tD/CvUdM1mDUIFmglWWNhkMpyK6IyUjjnFxN5Xp+/wB6pRzBh1qTza1sYstiSlM1U/OpDNxTsSZ/inxINBsA6RtcXUrCOCBBkyOSAAB3JJAA7kivWPhn4Lk8K6Huv5Bc63e4mvpxyN2OI1/2EBwPU7m6sa4n4VeEm8b/ABRnmlt0nttFtUMIkJAFzISQw9SqKeD3dT1Fe3rZGCRkb7ynBwa3pQvqzixE9ooiRcCr9qvFQmA54BPfirmn2015cxW8CbpZDtVSQMn6niulaHESQTG2nSTYkm052SDKn6inKc9aYM9D1FCtg07oQ9uKRTmhzkVEH2mobuBazRVfz/aiosTY88t7rkZNaUM27Fcvb3Occ1r20/HWi5pY2lQOOaqX1nD5bFgKRb9Y1yTiuH8ffEO10Oymd5QoUHvVbks5b4pa7p2habcTzOFCg4A6k+gr4M+I2uPr+sz3MjZLHCqDwo7AV6b8SPHuq/EHWms9Ot7i+lw7R2tsjSPtUFmbA54UEk9gK8Ymtpb3dIFLCplJRLhBs5S9h3Z4rE1PSDZSWxW4huPPiEpEJJMRJI2PkD5uM8ZGCOa7C+sCnUVltaAtyKV7otqzOp+EelD+1UnYfd+UH+dfS2n6ZHd6VPA43JICjD2IxXz94CuorR40Hyspz9a+jvD+qW+okeVbpaoUUbEZmBIABOSSeTz+Ncf2j2YpezsjmvBLSaLqH9mz5WS3lO0n+JG7/wBfxr161fzEGa5TUfDdvfTRz7SlxHyksZwR7e4rodObFtENzM+3DbvWrtqLm0S7GqoqQHiqyNipA5yKrlJ5iwp5qTdVUPzTt1NRDmJyaqalaC9haN+cjAqUNjvS7896TjoJPW559qejTWcpBBK9mrKmUxsRwfcV6TqRQQMXAPHeuW8MeGG8b+MdN0NC0cV5Nid04KQKC0hB7HaCAfVhXLKnZ2R1RraXfQ6H4X/AjUPijZnUby5Ok6ASVjlEYea5IOCYweFUH+I5zjgY5rqZf2VNd8LXDT+FfFMc6E82epwGNW+rpkf+OD619MaPpdtp9lBaWsSQWsEaxRRRjCooGAAPQAVoNCoHFdsaMEtVqeRUxVSUrp6HynPY+IvDWE8QaDd2Sjg3lsv2i3PuWTJQf74FS215HeRLLBKk8TdHiYMp/EV9OzQrtPFchrvgDQdana4udMh+1N965hzFMfq6EMR7E0ezXQhYl9UeLeYRSGTJr0Wf4PxSviy1S4gLHAFyiyov5bW/Nqo3/wAC9XsbtYb3xBb+QwDMbKzKSkezNIwU/wDATS5Gbe2jYm+CEbx2Ov3Y4S51MmJx3VIYoz+To4/A16msmFyawdB0a20LT4LGziEFtAoREGTgfU8knqSeSck1qu5C810w0VjinLmdy5HcMpyrFTgjg9j1qZCKzEmwasJcVd0QX1b0pCwBzVdZx60ebuNS0nqBZL8VHIwoDjFQStjvUgOMlFVzJzRQB5BbXecYrTGprDHlm6Vxy6ksKEk44rhvHPxNi0i1cCQBgPWoRT0O18bfE620S1kPmgEDpmvkn4p/FqfXLmSMSny8nCg8VzvxA+KM+rzyKJTjJwAa8uuL97mQsxJz61otjO2ps2+rXQ1ATwXEsE3IEkTlWAIwRkeoJH416h8P/Cq61bzRbNxaM4+vavHLOTbKDXuvwj8U2ulyjz2CqRjNYzO+m1ZnCeL/AAw2nzOrJtIOK4W5tCjHivoPx8bPV74vbsro/OR2rj9W+GlyloJxHmNhkMvIpRdmZNX1PL9PumtJ1cHaQa9q+H3ixJTGC2GGARmvJNW0STT5CGXFJoesyaZdoytjBolG+ptSqOOh9j2FylxErA9eavxIEYkd68w+H3i5NRtUUv8AMOCM16Tb3AdQQaEtDrb6ovq5xThJx1qsJKC9VYm5Y83DdakE3FZck+0jPrViOTilYZeMlS2jxNcIJ3McRPzMO1UPM4pskmF607CuU/Fl/FbRyiJi0ZOFJ6kVV+C/xQ8L+CPHt5c69qcdgwsTDGzxyP8AM7ox+6pA4TvjrXOeOb9kMaA44Jr5zn1gXeo3Yd8zCZ856tyeaiEOaWpnVqckLLqfqFpn7QfgK82iLxjowJ6LNepEfyYg11Nh8RND1XH2LWLC8z/zwuUf+Rr8kZLwiqs9+qrlyoH+1XVynnbn7FHWYpejAj1zTDeJKeDX46weM5tOcG2vJoSP+eMhX+Rr6Z/ZH/aCu4vEreGdav7i5tNRx9kkupmcxTAfcBJ4DDt6gepqJabjUObY+9EweRSyneOTms+wvVmiBzmrZcEUECIADTJGBpkj4NQPNQBLux3pQ9QllZFIbLdxjpTlYAUAWFlNSRynNVEYuW2gttGTgZwPWnCUCgDRjdnDYBIUZOOw9aY8gxVMXRQHDEZGDg9RUb3HBOaVymWTJzRVqyufD32WP7W2pfacfP5Ij2Z9snNFK4rHw74k+J0FlbuBKMgetfOfxC+IT6pcSBZCVJ9a4TXPHlzfs2ZWx9a5o6i88hLsTmqSA1ZbszuWY5JpI3ycVSR6sxnvVbCNCJ9uK17LWpLMDax4rnTOFqGS97A1DVy1I7m18YSrMCzkivT9A+LSQacsEoSQBcDPp6V85i7IPWpk1KROjGs3A1U7aM9Y8X61p2ql5IkEDHnC8rXmF3dBJjtPQ1Wk1ORs5Yn8aoy3BY5NXFNCuj0HwZ4ul0u6jYPjB5HqK+jPCHi+HVLZCHByORmvjSC9aJwQeleh+B/G8mm3CHf8vcZ60+U2hU6M+vY7gSAYPWnu+K4Xwt4vi1KGMhwciuu+0iRMg5ppHQJdudgbB2kkA9s/5xViC43KOetZV1cNtCliVBJC54BPU/oKWyuMoBnpU7Md7o29+e9RyS4BFVln96SSYMDV2uI4vx4cSRvn+EivkXXdRe01q8DE4E74I6j5jX1342UPa57rXyD48tDDr19gcGVm/M5rJaNnNW1sOTXbll4nZh9c1JqF7bXEVmYEuFnERFy08gdXk3tgoABtXZsGCSchjnBAHKQXbQNjqvpWnb3KzAYrXmuc5cMhx1rW8N6zNp2oQTwytDPE4eORDgqwOQQfXNYTNkUkNx5UoOSKb1HF2d0fq/8AAn4pxfEHwfY6iXUXO3yrlB/DKoG78DwR7EV6zHfBx1r82/2YPifP4S12K3uWeLTdSIj3OCE3g4DA/U4P19q+79G14XUStu6isYu2hVRa3WzO2kuEKdfmzVKSf3rMa+yOtJFfQmObzC/mYHl7cYznnP4Zq7mNjUWfb3qSPUZICxilaPcpRtpxlT1B9jWGb4DvWn4fsRr9zNCb62sfKhabfdPtVsfwg+vP6Umxonj1CSAOI5GQSLscKxG5cg4PqMgflTDe+9YDajjvTDqPqeKQG+9+PWozrDxQSwgIUkIJJQFhjPQ9R17daxb6/t1upRaySPb7j5bTKFcjtkAkA/iaz5tQA/iourBY3jqHPWiuXOo89aKVwPx/Zie9OhO1xUWaWMlpAByT0ArYOtjWifpU/mbRVKNipIIII4INEkvFMkmluPeq5lyagaTJpA9TcC0r9Oaf5mRVIuTUjSxmKIIjrKM+YzOCremBjj8z+FAExlPrSE5qINS5FXYLjt1T2928Dgg4NVj9aQmiwHpvgnxvJp86AucdxmvoPw14ti1K0QiQEketfG1tctC4YHGK9D8GeNpNPlRS5x3Gak66dTSzPqC4uVdM5zUdndbXK5rjNE8UR6jApD549a2Yrz94CDUs6U7nWifK0158DOay4bzco5pLi8wh5qyG9TM8UXCtayZ7CvCfFfgttVtbm8Rf3wOVx/FjqP8APpXr+sSteyrCp46k1DNpqNbbQoAAwBWaV2Zz1Wp8h6jYtaykYqOykKSYzjNet/EPwKUkkurdPkJyygdD6ivKpLU285B6g0rWZyl4uCKg3/NXtfwO+Ifw61D4k6nrPx303UPFGmyaR9mthp6+WyzxpHHFlY2jziJCoOeuCc9R4pdNA15O1srx2xkYxLKQWCZ+UEjqcYq7iSsze8PazNa3ESmViifcUscLk5OPSvur4F/FUa9okMVxLm7hASTJ5Ydm/H+dfnxDIUcEHpXqXwt8ezeHtShlVyMHDLn7w9KzkupvF3XKz9Kf7YhcnyZGeP8AhZhgke4yajbU8nrivKfBnjVNasY5I5AylA2SQOK6f+1we9QmQ1Y61tU/2qsWkn22C7mF1bwi2j8wrNKFaTkDag/iPOcegNcO+p570w6lx1pNiOsbUx61E+qD1rk21QjvVeXVsd6LgdVLqwH8VR23ie40m/gvbWUR3Fu4kjYqGAYHIOCCD+IrjZtX/wBqqU+sHnmkB1tzr8lzcSzSODJIxdiAACScngcCiuFbV+TzRQB+cp6U+zuprC6huraaS3uYXWSKaJirxsDkMpHIIPIIoorp6E9S7PeT6hcTXV1NJcXM7tJLNKxZ5HJyWYnkkkkkmon6UUUdCGRHrSUUUgClXrRRVR3AcKXPNFFWAtB7UUUALVyxdllUg4OaKKkuJ6n4HuZd6DecV6rasdinPpRRWLO6mbtox2Dmm3LHYeaKK2WxMtzHthmRieSTVmT7lFFTEiRy/iZFMD5APFfPXiONU1CXaoHzHpRRVSOR7mUtRP1ooqUaDk6VqaPIyXSbSRzRRSA+ofgpdzNDsMjFBggGvdI3Yxrz2oormRrLZDmkYAcmo/Mbb1NFFDMiNnbB5qnO7c8miihAUXY5PNVp2OOtFFMpFIu2etFFFAz/2Q=="
// 	// 将 Base64 编码的 ExtraInfo 转换为二进制数据
// 	imageData, err := base64.StdEncoding.DecodeString(s)
// 	if err != nil {
// 		log.Fatalf("Base64 解码失败: %v", err)
// 	}

//		// 将解码后的数据写入文件 ""
//		if err := os.WriteFile("D:\\Go Code\\src\\go - github\\go\\niaho.jpg", imageData, 0644); err != nil {
//			log.Fatalf("写入文件失败: %v", err)
//			return
//		}
//	}
func gongji() {

	// 打开图片文件
	file, err := os.Open("D:\\Go Code\\src\\go - github\\go\\niaho5.jpg")
	if err != nil {
		log.Fatal("打开图片文件失败:", err)
	}
	defer file.Close()

	// 创建一个缓冲区用于保存 multipart 表单数据
	var body bytes.Buffer
	writer := multipart.NewWriter(&body)

	// 创建文件字段并将文件内容写入
	fileWriter, err := writer.CreateFormFile("file", "nihao5.jpg")
	if err != nil {
		log.Fatal("创建文件字段失败:", err)
	}

	_, err = io.Copy(fileWriter, file)
	if err != nil {
		log.Fatal("写入文件内容失败:", err)
	}
	// 关闭 multipart writer 以设置结束边界
	writer.Close()
	req, err := http.NewRequest("PUT", "http://muxithief.muxixyz.com/api/v1/attack", &body)
	if err != nil {
		fmt.Println("ERROR OCCUR:", err.Error())
		return
	}
	req.Header.Add("Content-Type", writer.FormDataContentType())
	req.Header.Add("Authorization", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzE3NjAxODYsInN1YiI6Im5paGFvIn0.s9-wIoVKGjDCqLbwg1LfdIhsTwWd-R8yxUO9OUuMYXg")
	client := &http.Client{}
	for {
		res, err := client.Do(req)
		if err != nil {
			fmt.Println("ERROR OCCUR:", err.Error())
			return
		}
		defer res.Body.Close()
		fmt.Println(res)
		body1, err := io.ReadAll(res.Body)
		fmt.Println(string(body1))
	}

}
func main() {
	req, err := http.NewRequest("GET", "http://muxithief.muxixyz.com/api/v1/paper", nil)
	if err != nil {
		fmt.Println("ERROR OCCUR:", err.Error())
		return
	}
	req.Header.Add("Authorization", "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE3MzE3NjAxODYsInN1YiI6Im5paGFvIn0.s9-wIoVKGjDCqLbwg1LfdIhsTwWd-R8yxUO9OUuMYXg")
	go gongji()
	go gongji()
	go gongji()
	time.Sleep(time.Second)
	client := &http.Client{}
	res, err := client.Do(req)
	defer res.Body.Close()
	fmt.Println(res)
	body, err := io.ReadAll(res.Body)
	fmt.Println(string(body))

}
